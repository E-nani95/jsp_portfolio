package com.mycompany.myapp.Service;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.mycompany.myapp.DAO.BookstoreDAO;
import com.mycompany.myapp.DTO.BooksDTO;
import com.mycompany.myapp.DTO.OrderDTO;
import com.mycompany.myapp.VO.BookVO;
import com.mycompany.myapp.VO.UserVO;

@Service
public class BookstoreService {
	@Autowired
	private BookstoreDAO bookstoreDAO;
	
	public ArrayList<BooksDTO> getSubBooks(int itemsPerPage,int startPoint) {
		return bookstoreDAO.GetSubBooks(itemsPerPage,startPoint);
	}
	
	public BooksDTO getBookById(String id){
		return bookstoreDAO.getBookById(id);
	}
	
	public boolean insertBook(BookVO bookVO, String img_path) {
		MultipartFile mf = bookVO.getB_img_full();
		//UUID등으로 고유 파일명 생성
		String filename=mf.getOriginalFilename();
		
		//비거나 없을때 default 이미지로 대체
		if(mf.isEmpty() || mf ==null) {
			bookVO.setB_img("Default=image.png");
			return bookstoreDAO.InsertBook(bookVO);
		}
		try {
			// 이과정의 cotroller에 넣었음
			File saveFile = new File(img_path,filename);
	        if (!saveFile.exists()) {
	            saveFile.mkdirs(); // mkdirs()는 필요한 상위 폴더까지 모두 만들어줍니다.
	        }
			mf.transferTo(saveFile);
			bookVO.setB_img(filename);
			
//	        Path filePath = directoryPath.resolve(filename);
//	        mf.transferTo(filePath.toFile());
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return bookstoreDAO.InsertBook(bookVO);
	}
	
	public UserVO login(UserVO userVO) {
		UserVO res = bookstoreDAO.Login(userVO);
		if(res.getU_id() != null && res.getU_name() !=null && res.getU_pw() != null) {
			System.out.println("service True");
		}else {
			System.out.println("service False");
		}
		return res;
	}
	
	public boolean signUp(UserVO userVO) {
		boolean res = bookstoreDAO.signUp(userVO);
		if(res) {
			return true;
		}else {
			return false;
		}
		
	}
	
	public ArrayList<OrderDTO> orderList(String id){
		return bookstoreDAO.orderList(id);
	}
	
	public boolean orderDelete(String b_no) {
		return bookstoreDAO.orderDelete(b_no);
	}
	
	public boolean orderAllDelete(String u_no) {
//		return bookstoreDAO.orderDelete(u_no);
		boolean res = bookstoreDAO.orderAllDelete(u_no);
		if(res) {
			System.out.println("합격");
		}else {
			System.out.println("불합격");
		}
		return res;
	}
	
	public boolean addCart(String u_no, String b_no) {
		boolean res = bookstoreDAO.addCart(u_no, b_no);
		if(res) {
			System.out.println("추가 성공");
		}else {
			System.out.println("추가 실패");
		}
		return res;
	}

}
