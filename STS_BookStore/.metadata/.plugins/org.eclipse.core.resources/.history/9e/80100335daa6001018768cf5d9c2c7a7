package com.mycompany.myapp.DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.sql.DataSource;

import org.apache.taglibs.standard.tag.common.fmt.ParseDateSupport;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.mycompany.myapp.DTO.BooksDTO;
import com.mycompany.myapp.VO.BookVO;
import com.mycompany.myapp.VO.UserVO;

@Repository
public class BookstoreDAO {
	
	private DataSource dataSource;
	
	@Autowired
	public BookstoreDAO(DataSource dataSource) {
		this.dataSource = dataSource;
	}
	
	private Connection getconnection() throws SQLException {
		return dataSource.getConnection();
	}
	


	public ArrayList<BooksDTO> GetAllBooks() {
		Connection conn;
		PreparedStatement pstmt;
		ResultSet rs;
//		String sql = "Select * from book join division on book.d_no=division.d_no";
//		임시 query문 3개로 제한함
		String sql = "Select * from book join division on book.d_no=division.d_no limit 3";
		ArrayList<BooksDTO> bdl = new ArrayList<>();
		
		try {
			conn=getconnection();
			pstmt=conn.prepareStatement(sql);
			rs=pstmt.executeQuery();
			while(rs.next()) {
				BooksDTO bd = new BooksDTO();
				bd.setB_name(rs.getString("b_name"));
				bd.setB_author(rs.getString("b_author"));
				bd.setB_exp(rs.getString("b_exp"));
				bd.setD_name(rs.getString("d_name"));
				bd.setB_img(rs.getString("b_img"));
				bd.setB_price(rs.getInt("b_price"));
				bd.setB_no(rs.getInt("b_no"));
				bdl.add(bd);
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return bdl;
	}
	
	public BooksDTO getBookById(String id){
		Connection conn;
		PreparedStatement pstmt;
		ResultSet rs;
		int idx = Integer.parseInt(id);
		String sql="Select * from book join division on book.d_no=division.d_no where b_no = ?";
		BooksDTO bd = new BooksDTO();
		try {
			conn=getconnection();
			pstmt=conn.prepareStatement(sql);
			pstmt.setInt(1, idx);
			rs=pstmt.executeQuery();
			if(rs.next()) {
				
				bd.setB_name(rs.getString("b_name"));
				bd.setB_author(rs.getString("b_author"));
				bd.setB_exp(rs.getString("b_exp"));
				bd.setD_name(rs.getString("d_name"));
				bd.setB_img(rs.getString("b_img"));
				bd.setB_price(rs.getInt("b_price"));
				bd.setB_no(rs.getInt("b_no"));
				bd.setB_count(rs.getInt("b_count"));
				}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return bd;
	}
	
	public boolean InsertBook(BookVO bookVO) {
		Connection conn;
		PreparedStatement pstmt;
		String sql = "Insert into book (b_name,d_no,b_author,b_count,b_price,b_exp,b_img) values(?,?,?,?,?,?,?)";
		int res=0;
		System.out.println(bookVO.getB_name()+"----------------------------------------");
		System.out.println(bookVO.getD_no()+"++++++++++++++++++++++++++++++++++++++++++");
		try {
			conn=getconnection();
			pstmt=conn.prepareStatement(sql);
			pstmt.setString(1, bookVO.getB_name());
			pstmt.setInt(2, bookVO.getD_no());
			pstmt.setString(3, bookVO.getB_author());
			pstmt.setInt(4, bookVO.getB_count());
			pstmt.setInt(5, bookVO.getB_price());
			pstmt.setString(6, bookVO.getB_exp());
			pstmt.setString(7, bookVO.getB_img());
			res=pstmt.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return res>0;
	} 
	
	
	public UserVO Login(UserVO userVO) {
		Connection conn;
		PreparedStatement pstmt;
		String sql = "Select * from user where u_id = ? and u_pw = ?";
		ResultSet rs;
		System.out.println("+++++++++++++++++++++++++++++++++++++++");
		System.out.println(userVO.getU_id()+"|"+userVO.getU_pw());
		System.out.println("+++++++++++++++++++++++++++++++++++++++");
		UserVO uv = new UserVO();
		try {
			conn=getconnection();
			pstmt=conn.prepareStatement(sql);
			pstmt.setString(1, userVO.getU_id());
			pstmt.setString(2, userVO.getU_pw());
			rs=pstmt.executeQuery();
			if(rs.next()) {
				System.out.println("DAO True");
				uv.setU_id(rs.getString("u_id"));
				uv.setU_pw(rs.getString("u_pw"));
				uv.setU_name(rs.getString("u_name"));
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return uv;
	}
	
	public boolean signUp(UserVO userVO) {
		Connection conn;
		PreparedStatement pstmt;
		String sql ="INSERT INTO user (u_id,u_pw,u_name) VALUES(?,?,?)";
	}
}
